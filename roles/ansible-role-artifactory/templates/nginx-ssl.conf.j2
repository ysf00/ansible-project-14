
##add ssl entries when https has been set in config
ssl_certificate      {{ artifactory_ssl_cert_dir }}/{{ artifactory_ssl_cert_filename }};
ssl_certificate_key  {{ artifactory_ssl_cert_dir }}/{{ artifactory_ssl_key_filename }};
ssl_session_cache shared:SSL:1m;
ssl_prefer_server_ciphers   on;

## server configuration
server {
    listen {{ artifactory_proxy_port }};
    return 301 https://$host$request_uri;
}
server {
    listen {{ artifactory_https_port }} ssl;


    server_name {{ artifactory_host_name }};
    if ($http_x_forwarded_proto = '') {
        set $http_x_forwarded_proto  $scheme;
    }
    rewrite ^/$ /webapp/ redirect;
    rewrite ^//?(/webapp)?$ /webapp/ redirect;
    chunked_transfer_encoding on;
        client_max_body_size {{ artifactory_max_artifact_size }}; ;
    location / {
    proxy_read_timeout  900;
    proxy_pass_header   Server;
    proxy_cookie_path   ~*^/.* /;
    proxy_pass          http://{{ artifactory_host_name }}:{{ artifactory_http_port }}/artifactory/;
    proxy_set_header    X-Artifactory-Override-Base-Url $http_x_forwarded_proto://$host:$server_port;
    proxy_set_header    X-Forwarded-Port  $server_port;
    proxy_set_header    X-Forwarded-Proto $http_x_forwarded_proto;
    proxy_set_header    Host              $http_host;
    proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
    }
}

{% if artifactory_docker_enabled %}
## server configuration
server {
    listen {{ artifactory_docker_listen_port }} ssl;

    server_name {{ artifactory_host_name }};
    if ($http_x_forwarded_proto = '') {
        set $http_x_forwarded_proto  $scheme;
    }
    rewrite ^/(v1|v2)/(.*) /api/docker/docker-local/$1/$2;
    chunked_transfer_encoding on;
    client_max_body_size 0;
    location / {
    proxy_read_timeout  900;
    proxy_pass_header   Server;
    proxy_cookie_path   ~*^/.* /;
    proxy_pass          http://{{ artifactory_host_name }}:{{ artifactory_http_port }}/artifactory/;
    proxy_set_header    X-Artifactory-Override-Base-Url $http_x_forwarded_proto://$host:$server_port;
    proxy_set_header    X-Forwarded-Port  $server_port;
    proxy_set_header    X-Forwarded-Proto $http_x_forwarded_proto;
    proxy_set_header    Host              $http_host;
    proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
    }
}
{% endif %}